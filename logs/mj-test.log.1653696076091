INFO  02:01:08,064 - Compiling source file: D:\ETF\Godina 4\PP projekat\PROJEKAT\MJCompiler\test\program.mj
INFO  02:01:08,165 - #2 program
INFO  02:01:08,165 - #54 MJAUProgram
INFO  02:01:08,165 - #49 int
INFO  02:01:08,167 - #54 a
INFO  02:01:08,169 - #42 ,
INFO  02:01:08,169 - #54 b
INFO  02:01:08,169 - #40 ;
INFO  02:01:08,170 - #49 int
INFO  02:01:08,172 - #54 zzz
INFO  02:01:08,172 - #47 [
INFO  02:01:08,172 - #48 ]
INFO  02:01:08,172 - #40 ;
INFO  02:01:08,172 - #45 {
INFO  02:01:08,172 - #49 int
INFO  02:01:08,173 - #54 sum
INFO  02:01:08,173 - #43 (
INFO  02:01:08,174 - #49 int
INFO  02:01:08,174 - #54 numArgs
INFO  02:01:08,174 - #42 ,
INFO  02:01:08,175 - #49 int
INFO  02:01:08,175 - #20 .
INFO  02:01:08,176 - #20 .
INFO  02:01:08,176 - #20 .
INFO  02:01:08,176 - #54 args
INFO  02:01:08,176 - #44 )
INFO  02:01:08,176 - #49 int
INFO  02:01:08,176 - #54 suma
INFO  02:01:08,176 - #40 ;
INFO  02:01:08,177 - #45 {
INFO  02:01:08,177 - #54 suma
INFO  02:01:08,179 - #39 =
INFO  02:01:08,180 - #53 0
INFO  02:01:08,180 - #40 ;
INFO  02:01:08,181 - #10 do
INFO  02:01:08,181 - #45 {
INFO  02:01:08,182 - #54 numArgs
INFO  02:01:08,182 - #33 --
INFO  02:01:08,182 - #40 ;
INFO  02:01:08,182 - #54 suma
INFO  02:01:08,183 - #39 =
INFO  02:01:08,183 - #54 suma
INFO  02:01:08,183 - #34 +
INFO  02:01:08,183 - #54 args
INFO  02:01:08,185 - #47 [
INFO  02:01:08,185 - #54 numArgs
INFO  02:01:08,186 - #48 ]
INFO  02:01:08,186 - #40 ;
INFO  02:01:08,188 - #46 }
INFO  02:01:08,188 - #11 while
INFO  02:01:08,189 - #43 (
INFO  02:01:08,189 - #54 numArgs
INFO  02:01:08,189 - #26 >
INFO  02:01:08,190 - #53 0
INFO  02:01:08,191 - #44 )
INFO  02:01:08,192 - #40 ;
INFO  02:01:08,193 - #5 return
INFO  02:01:08,193 - #54 suma
INFO  02:01:08,193 - #40 ;
INFO  02:01:08,193 - #46 }
INFO  02:01:08,193 - #6 void
INFO  02:01:08,195 - #54 printaj
INFO  02:01:08,196 - #43 (
INFO  02:01:08,196 - #49 int
INFO  02:01:08,197 - #54 numArgs
INFO  02:01:08,197 - #42 ,
INFO  02:01:08,197 - #50 char
INFO  02:01:08,197 - #20 .
INFO  02:01:08,198 - #20 .
INFO  02:01:08,201 - #20 .
INFO  02:01:08,201 - #54 args
INFO  02:01:08,202 - #44 )
INFO  02:01:08,202 - #49 int
INFO  02:01:08,202 - #54 i
INFO  02:01:08,202 - #40 ;
INFO  02:01:08,202 - #45 {
INFO  02:01:08,202 - #10 do
INFO  02:01:08,202 - #45 {
INFO  02:01:08,202 - #4 print
INFO  02:01:08,202 - #43 (
INFO  02:01:08,203 - #54 args
INFO  02:01:08,203 - #47 [
INFO  02:01:08,203 - #54 i
INFO  02:01:08,203 - #48 ]
INFO  02:01:08,203 - #44 )
INFO  02:01:08,203 - #40 ;
INFO  02:01:08,203 - #54 i
INFO  02:01:08,203 - #32 ++
INFO  02:01:08,203 - #40 ;
INFO  02:01:08,204 - #46 }
INFO  02:01:08,204 - #11 while
INFO  02:01:08,204 - #43 (
INFO  02:01:08,204 - #54 i
INFO  02:01:08,204 - #28 <
INFO  02:01:08,204 - #54 numArgs
INFO  02:01:08,205 - #44 )
INFO  02:01:08,205 - #40 ;
INFO  02:01:08,205 - #46 }
INFO  02:01:08,205 - #6 void
INFO  02:01:08,205 - #54 main
INFO  02:01:08,205 - #43 (
INFO  02:01:08,206 - #44 )
INFO  02:01:08,207 - #49 int
INFO  02:01:08,207 - #54 asd
INFO  02:01:08,207 - #47 [
INFO  02:01:08,207 - #48 ]
INFO  02:01:08,207 - #40 ;
INFO  02:01:08,207 - #45 {
INFO  02:01:08,207 - #54 a
INFO  02:01:08,207 - #39 =
INFO  02:01:08,207 - #53 3
INFO  02:01:08,207 - #4 print
ERROR 02:01:08,207 - Sintaksna greska na liniji 31
INFO  02:01:08,207 - #43 (
INFO  02:01:08,207 - #54 sum
INFO  02:01:08,208 - #43 (
INFO  02:01:08,208 - #53 2
INFO  02:01:08,208 - #42 ,
INFO  02:01:08,208 - #53 3
INFO  02:01:08,208 - #42 ,
INFO  02:01:08,208 - #53 2
INFO  02:01:08,208 - #44 )
INFO  02:01:08,208 - #44 )
INFO  02:01:08,208 - #40 ;
INFO  02:01:08,209 - #46 }
INFO  02:01:08,209 - #46 }
ERROR 02:01:08,209 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 33
